{
  "discipline": "Genomics",
  "description": "Genomics is the study of the complete set of DNA (including all genes) in an organism. It involves the sequencing, assembly, annotation, and analysis of genomes to understand genetic variation, gene function, and evolutionary relationships.",
  "key_concepts": [
    "DNA sequencing technologies (short-read, long-read)",
    "Genome assembly (de novo, reference-guided)",
    "Variant calling (SNPs, indels, structural variants)",
    "Gene prediction and annotation",
    "Comparative genomics",
    "Functional genomics",
    "Population genomics"
  ],
  "common_tools": [
    "BWA/Bowtie2 - Read alignment",
    "GATK - Variant calling and analysis",
    "SPAdes/MEGAHIT - De novo assembly",
    "BLAST - Sequence similarity search",
    "IGV - Genome visualization",
    "Prokka/MAKER - Genome annotation",
    "samtools/bcftools - SAM/BAM/VCF manipulation"
  ],
  "common_file_formats": [
    {
      "name": "FASTQ",
      "description": "Raw sequencing reads with quality scores"
    },
    {
      "name": "FASTA",
      "description": "Nucleotide or protein sequences without quality scores"
    },
    {
      "name": "SAM/BAM",
      "description": "Sequence alignment data"
    },
    {
      "name": "VCF",
      "description": "Variant call format for SNPs and other variants"
    },
    {
      "name": "GFF/GTF",
      "description": "Gene annotation format"
    },
    {
      "name": "BED",
      "description": "Browser extensible data format for genomic intervals"
    }
  ],
  "examples": [
    {
      "query": "How do I identify SNPs in my bacterial genome compared to a reference?",
      "context": "The user has Illumina paired-end reads from a bacterial isolate and wants to identify single nucleotide polymorphisms.",
      "response": "\nTo identify SNPs in your bacterial genome compared to a reference, follow this workflow:\n\n1. Quality control your raw reads:\n   ```bash\n   fastqc -o qc_results raw_reads_R1.fastq.gz raw_reads_R2.fastq.gz\n   ```\n\n2. Trim low-quality bases and adapters:\n   ```bash\n   trimmomatic PE raw_reads_R1.fastq.gz raw_reads_R2.fastq.gz      trimmed_R1.fastq.gz unpaired_R1.fastq.gz      trimmed_R2.fastq.gz unpaired_R2.fastq.gz      ILLUMINACLIP:adapters.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36\n   ```\n\n3. Align reads to the reference genome:\n   ```bash\n   bwa index reference.fasta\n   bwa mem reference.fasta trimmed_R1.fastq.gz trimmed_R2.fastq.gz | samtools view -bS - > aligned.bam\n   ```\n\n4. Sort and index BAM file:\n   ```bash\n   samtools sort aligned.bam -o aligned.sorted.bam\n   samtools index aligned.sorted.bam\n   ```\n\n5. Call variants:\n   ```bash\n   bcftools mpileup -f reference.fasta aligned.sorted.bam | bcftools call -mv -Ob -o variants.bcf\n   bcftools view variants.bcf > variants.vcf\n   ```\n\n6. Filter variants:\n   ```bash\n   bcftools filter -i 'QUAL>20 && DP>10' variants.vcf > filtered_variants.vcf\n   ```\n\n7. Annotate variants (optional):\n   ```bash\n   snpEff -v -csvStats snp_stats.csv reference_db filtered_variants.vcf > annotated_variants.vcf\n   ```\n\nKey considerations:\n- Ensure your reference genome is closely related to your isolate\n- Adjust filtering parameters based on your sequencing depth\n- Check that your SNPs have good coverage and quality scores\n"
    },
    {
      "query": "What's the best approach for de novo assembly of a bacterial genome from Oxford Nanopore data?",
      "context": "The user has Oxford Nanopore long reads (~20x coverage) from a novel bacterial strain.",
      "response": "\nFor de novo assembly of a bacterial genome from Oxford Nanopore data, I recommend this workflow:\n\n1. Quality control and filtering:\n   ```bash\n   NanoPlot --fastq reads.fastq --outdir qc_results\n   NanoFilt -q 10 -l 1000 reads.fastq > filtered_reads.fastq\n   ```\n\n2. For pure long-read assembly, use Flye:\n   ```bash\n   flye --nano-raw filtered_reads.fastq --out-dir assembly --genome-size 5m --threads 16\n   ```\n\n3. Polish the assembly to reduce error rate (multiple rounds recommended):\n   ```bash\n   # Map reads to the assembly\n   minimap2 -ax map-ont assembly/assembly.fasta filtered_reads.fastq | samtools sort -o aligned.bam\n   samtools index aligned.bam\n   \n   # Polish with Racon (1-2 rounds)\n   racon filtered_reads.fastq aligned.paf assembly/assembly.fasta > polished.fasta\n   \n   # Further polish with Medaka\n   medaka_consensus -i filtered_reads.fastq -d polished.fasta -o medaka_polished -t 16 -m r941_min_high_g360\n   ```\n\n4. Evaluate assembly quality:\n   ```bash\n   quast.py medaka_polished/consensus.fasta -o assembly_qc\n   ```\n\n5. Check for completeness using single-copy orthologs:\n   ```bash\n   busco -i medaka_polished/consensus.fasta -o busco_results -m genome -l bacteria_odb10\n   ```\n\nKey considerations:\n- With only 20x coverage, you may see higher error rates. Consider additional polishing or hybrid assembly\n- For higher quality, incorporate Illumina reads if available using tools like Pilon\n- Long-read assembly is generally better for resolving repeat regions in bacterial genomes\n- Check for potential contamination using tools like CheckM\n"
    }
  ],
  "references": [
    "Sedlazeck FJ, et al. (2018). Accurate detection of complex structural variations using single-molecule sequencing. Nature Methods.",
    "Bush SJ, et al. (2020). Best practice in the application of bioinformatics to microbial genome annotation. Frontiers in Microbiology."
  ]
}